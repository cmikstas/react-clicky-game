{"version":3,"sources":["components/Navbar/index.js","components/DemonCard/index.js","components/StatusBar/index.js","App.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","DemonCard","props","alt","name","src","image","onClick","handleIncrement","StatusBar","count","highCount","gameMessage","App","state","shuffledArr","clickedArr","tempGameMessage","tempArr","tempCount","tempHighCount","console","log","includes","push","setState","cardRandomizer","randomArr","length","newIndex","Math","floor","random","i","images","this","map","demons","key","Component","ReactDOM","render","document","getElementById"],"mappings":"m7CA6BeA,G,MA1BA,WAEb,OACE,yBAAKC,UAAU,+CACb,uBAAGC,KAAK,IAAID,UAAU,gCACpB,8CAEF,4BAAQA,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAC3DC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAC3FC,aAAW,qBACX,0BAAMP,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BQ,GAAG,0BAC3C,wBAAIR,UAAU,sBACZ,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,2BAA2BC,KAAK,kEAA7C,WAEF,wBAAID,UAAU,YACZ,uBAAGA,UAAU,2BAA2BC,KAAK,wCAA7C,6BCPGQ,G,MAXG,SAACC,GAEf,OACE,yBAAKV,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKW,IAAKD,EAAME,KAAMC,IAAKH,EAAMI,MAAOC,QAAS,kBAAML,EAAMM,gBAAgBN,EAAMF,WCY9ES,G,MAjBG,SAACP,GAEf,OACE,6BACM,kDACA,4DACA,iHACA,6BACA,8CAAoBA,EAAMQ,OAC1B,2CAAiBR,EAAMS,WACvB,6BACA,4BAAKT,EAAMU,gB,OCuGRC,G,iNA5GXC,MACA,CACIJ,MAAO,EACPC,UAAW,EACXI,YAAa,GACbC,WAAY,GACZJ,YAAa,yB,EAGjBJ,gBAAkB,SAACR,GAEf,IAGIiB,EAHAC,EAAO,YAAO,EAAKJ,MAAME,YACzBG,EAAY,EAAKL,MAAMJ,MACvBU,EAAgB,EAAKN,MAAMH,UAG/BU,QAAQC,IAAItB,GAEPkB,EAAQK,SAASvB,IAalBiB,EAAkB,0CAClBC,EAAU,GACVC,EAAY,IAbZF,EAAkB,yBAClBC,EAAQM,KAAKxB,KACbmB,EAEgBC,IAEZA,EAAgBD,IAUxB,EAAKM,SACD,CACIf,MAAOS,EACPR,UAAWS,EACXR,YAAaK,EACbD,WAAYE,IAIpB,EAAKQ,kB,EAGTA,eAAiB,WAKb,IAHA,IAAIC,EAAY,GACZT,EAAU,GAEPS,EAAUC,OAAS,IAC1B,CACI,IAAIC,EAAWC,KAAKC,MAAsB,GAAhBD,KAAKE,UAE1BL,EAAUJ,SAASM,IAEpBF,EAAUH,KAAKK,GAIvB,IAAK,IAAII,EAAI,EAAGA,EAAIN,EAAUC,OAAQK,IAElCf,EAAQM,KAAKU,EAAOP,EAAUM,KAGlC,EAAKR,SAAS,CAAEV,YAAaG,K,mFAK7BiB,KAAKT,mB,+BAIR,IAAD,OACI,OACI,yBAAKlC,UAAU,YACX,6BACI,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,+BACX,kBAAC,EAAD,CACIkB,MAAOyB,KAAKrB,MAAMJ,MAClBE,YAAauB,KAAKrB,MAAMF,YACxBD,UAAWwB,KAAKrB,MAAMH,aAK9B,yBAAKnB,UAAU,0BACV2C,KAAKrB,MAAMC,YAAYqB,KAAI,SAAAC,GAAM,OAC9B,kBAAC,EAAD,CACIjC,KAAMiC,EAAOjC,KACbE,MAAO+B,EAAO/B,MACdN,GAAIqC,EAAOrC,GACXsC,IAAKD,EAAOrC,GACZQ,gBAAiB,EAAKA,2B,GArGhC+B,cCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3e9fa982.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nconst Navbar = () =>\n{\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n      <a href=\"#\" className=\"navbar-brand text text-light\">\n        <h3>Chris Mikstas</h3>\n      </a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link text text-light\" href=\"../Bootstap-Portfolio/assets/resume/Resume - Chris Mikstas.pdf\">Resume</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link text text-light\" href=\"../Bootstap-Portfolio/portfolio.html\">Return to Portfolio</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst DemonCard = (props) => \r\n{\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"img-container\">\r\n          <img alt={props.name} src={props.image} onClick={() => props.handleIncrement(props.id)}/>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default DemonCard;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst StatusBar = (props) => \r\n{\r\n    return (\r\n      <div>\r\n            <h1>The Game of Clicks</h1>\r\n            <h2>Test your hand at Demonology</h2>\r\n            <h2>Click on a demon's image to earn points, but don't click on the same demon twice!</h2>\r\n            <br></br>\r\n            <h3>Current Score: {props.count}</h3>\r\n            <h2>High Score: {props.highCount}</h2>\r\n            <br></br>\r\n            <h1>{props.gameMessage}</h1>\r\n\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default StatusBar;","import React, { Component } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport DemonCard from \"./components/DemonCard\";\r\nimport StatusBar from \"./components/StatusBar\"\r\nimport images from \"./images.json\";\r\nimport './style.css';\r\n\r\nclass App extends Component \r\n{\r\n    state =\r\n    {\r\n        count: 0,\r\n        highCount: 0,\r\n        shuffledArr: [],\r\n        clickedArr: [],\r\n        gameMessage: \"Click a card to begin\"\r\n    };\r\n\r\n    handleIncrement = (id) => \r\n    {\r\n        let tempArr = [...this.state.clickedArr];\r\n        let tempCount = this.state.count;\r\n        let tempHighCount = this.state.highCount;\r\n        let tempGameMessage;\r\n\r\n        console.log(id);\r\n\r\n        if (!tempArr.includes(id))\r\n        {\r\n            tempGameMessage = \"You have chosen wisely\";\r\n            tempArr.push(id);\r\n            tempCount++;\r\n\r\n            if (tempCount > tempHighCount)\r\n            {\r\n                tempHighCount = tempCount;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            tempGameMessage = \"You have chosen foolishly, start again.\";\r\n            tempArr = [];\r\n            tempCount = 0;\r\n        }\r\n\r\n        this.setState(\r\n            {\r\n                count: tempCount,\r\n                highCount: tempHighCount,\r\n                gameMessage: tempGameMessage,\r\n                clickedArr: tempArr\r\n            }\r\n        )\r\n\r\n        this.cardRandomizer();\r\n    };\r\n\r\n    cardRandomizer = () =>\r\n    {\r\n        let randomArr = [];\r\n        let tempArr = [];\r\n\r\n        while (randomArr.length < 12)\r\n        {\r\n            let newIndex = Math.floor(Math.random() * 12);\r\n\r\n            if (!randomArr.includes(newIndex))\r\n            {\r\n                randomArr.push(newIndex);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < randomArr.length; i++)\r\n        {\r\n            tempArr.push(images[randomArr[i]]);\r\n        }\r\n        \r\n        this.setState({ shuffledArr: tempArr });\r\n    };\r\n\r\n    componentDidMount()\r\n    {\r\n        this.cardRandomizer();\r\n    }\r\n        \r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"htmlBody\">\r\n                <div>\r\n                    <Navbar></Navbar>\r\n                </div>\r\n                <div className=\"jumbotron jumbo text-center\">\r\n                    <StatusBar\r\n                        count={this.state.count}\r\n                        gameMessage={this.state.gameMessage}\r\n                        highCount={this.state.highCount}\r\n                    >\r\n                    </StatusBar>\r\n\r\n                </div>\r\n                <div className=\"container containerDiv\">\r\n                    {this.state.shuffledArr.map(demons => (\r\n                        <DemonCard\r\n                            name={demons.name}\r\n                            image={demons.image}\r\n                            id={demons.id}\r\n                            key={demons.id}\r\n                            handleIncrement={this.handleIncrement}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}